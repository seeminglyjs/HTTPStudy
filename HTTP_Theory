http는 HTML에서 확인할 수 있는 request 와 response를 나타낸다.


////2020  - 10 - 20

웹 서버는 http 프로토콜로 의사소통 하기 때문에 http 서버라고도 불린다.
클라이언트가 서버에 http를 요청하고 이에 대하여 서버가 http로 응답하는 과정을 거친다.

어떤 종류의 컨텐츠 소스도 리소스가 될 수 있다

http 는 웹에서 전송되는 객체 각각에 신중하게 mime 타입이라는 데이터 포맥 라벨을 붙이다.
mime는 / 사선으로 구분되면 앞에는 주타임 뒤에는 부타입을 나타낸다.ex) Content-type : image/jpeg

uri(uniform resource identifier) : 정보리소스를 고유하게 식별하고 위치를 지정할 수있다. 
클라이언트가 선택하는 관심있는 리소스

url(uniform resource locator) : 리소스 식별자의 가장 흔한 형태다.
이는 특정 서버의 한 리소스에 대한 구체적인 위치를 서술한다.
구서 요소로는 스킴(http://) + 주소 + 웹서버의 리소스

※ url 과 uri 가 같은 의미로 사용되기도 한다.

http 는 여러 종류의 method가 있는데 그 중에서 가장 많이 사용되는 것은
(GET, PUT DELETE, POST, HEAD)등이 있다. 차후 자세히....

http 상태코드 200(좋다), 302(다시 보내라), 404(오류)

http이 메세지 구성은 시작줄 / 헤더 / 본문 으로 이루어져 있다.
이 중 헤더는  :쌍점으로 구분되며, 빈줄로 끝난다.
http / 1.0 200 OK (시작줄)
Content-type : text/plain(헤더)
Content-length 19

Hello World!(본문)

//////// p 13 까지 공부

////2020  - 10 - 21

  TCP/IP는 TCP/IP가 층을 이루는 패킷교환 네트워크 프로토콜의 집합이다.
  일단 TCP 커넥션이 맺어지면 클라이언트와 서버 컴퓨터간에 교환되는
  메세지가 없어지거나 손상되거나 순서가 뒤바뀌어 수신되는 일은 결코 없다.
  IP < TCP < HTTP(상위계층)
  
  HTTP의 서버의 IP주소와 포트번호는 URL을 이용해 손쉽게 알아넬 수 있다.
  
  호스트 명은 IP주소에 대한 이해하기 쉬운 형태의 별명인데, 호스트 명은
  도메인 이름 서비스 DNS 라 불리는 장치를 통해 쉽게 IP로 변환될  수 있다.
  
  텔넷 유틸리티는 당신의 키보드를 목적지의 TCP포토로 연결해주고 출력 TCP포트를
  당신의 화면에 연결해 준다.
  
  ////웹의 구성요소 //////
  
  프락시 : 클라이언트와 서버사이에 위치하여, 클라이언트의 모든 HTTP요청을 받아
  서버에 전달한다. 주로 보안을 위해 사용되며, 요청과 응답을 필터링한다.
  
  캐시: 웹캐시와 캐시 프락시는 자신을 거쳐가는 문서들 중 자주 찾는 것의 사본을 
  저장 해 두는, 특별한 종류의 HTTP 프락시 서버이다.
  
  게이트웨이: HTTP트래픽을 다른 프로토콜로 변환하기 위해 사용한다.
  
  터널: 두 커넥션 사이에서 날 데이터를 열어보지 않고 그대로 전달해주는
  HTTP 어플리케이션이다.

////////////////////2장 URL과 리소스//////////////////////////

  URL은 부라우저가 정보를 찾는데 필요한 리소스의 위치를 가리키며, URL을 이용해 
  사람과 애플리케이션이 인터넷상의 수십억 개의 리소스를 찾고 사용하며, 공유할 수 있다.
  대부분의 URL은 스킴://서버위치/경로 로 구성되어 있다.
  
  URL 스킬의 문법은 일반적으로 9개로 나누어지며, 중요한 세가지는
  컴포넌트는 스킴, 호스트, 경로 이다.
  
  <스킴>://<사용자이름>:<비밀번호>@<호스트>:<포트>/<경로>;<파라미터>?<질의>#<프레그먼트>
  자세한 내용은 p 31 쪽~~ 참고
  
  질의 문자열은 보통 리소스에 해당 자원이 있는지에 대하여 확인을 하기 위해 사용한다.
  제외된 특정 문자를 제외하고 편의상 &을 이용해 이름 = 값 쌍 형식의 질의 문자열을 많이 사용한다.
  
  프래그먼트는 리소스안에 특정 절을 가리킬 수 있는 컨포넌트로써 # 뒤에 해당 프레그먼트를 넣으면
  웹사이트상에 스크롤이 해당 리소스로 이동하게 된다.

  p 35 까지 공부
  
////2020  - 10 - 22

  2.31
  url은 상대 url과 절대 url 두가지로 나늰다. 절대 url은 리소스에 접근하는데 필요한 모든 정보를 가지고 있다.
  그와달리 상대 url은 리소스에 접근하는데 필요한 모든 정보를 얻기 위해서는 기저(base)라고 하는 다른 url 을 사용해야 한다.
  상대 url은 url을 짧게 표기하는 방식이다.
  상대 url은 프래그먼트이거나 url 일부다. url을 처리하는 브라우저 같은 애플리케이션은 상대 url과 절대 url간에
  상호 변환을 할 수 있어야 한다.
  
  url의 변환 괒어은 p 38 ~ 39 쪽을 참고하자!
  
  2.32
  어떤 부라우저들은 url을 입력한 다음이나 입력하고 있는 동안에 자동으로 url을 확장한다.
  이 확장 기능은 두가지로 나누어 진다.
  1. 호스트명 확장 : 이 기능을 지원하는 브라우저는 단순한 휴리스틱스만을 사용해서 입력한 호스트명을
  전체 호스트 명으로 확장할 수 있다.  
  2. 히스토리 확장: 사용자가 url을 입력하는 시간을 줄이고자, 브라우저가 사용하는 또 다른 기술은 과거에
  사용자가 방문했던 url의 기록을 저장해 놓은 것이다. (cookie)를 말하는 듯 싶다...
  
  2.4 안전하지 않은 문자.
  url은 잘 호환되도록 설계되었다. 안전한 전송이란 정보가 유실될 위험 없이 url을 전송할 수 있다는 것을 의미한다.
  하지만 url은 더 완벽해져야 했다. url 설계자는 사람들이 url에 이진 데이터나 일반적으로 안전한 알파벳 외의 문자도
  포함하려고 할 때가 있다는 것을 알게 되었다. 그래서 이스케이프라는 기능을 추가하여, 안전하지 않은 문자를 안전한
  문자로 인코딩할 수 있게 하였다.
  
  2.41
  컴퓨터 시스템의 기본문자는 영어중심으로 설정되어 있다. (US-ASCII) 때문에 사용가능한 문자들이 한정적
  대안으로 이스케이프 기능을 통해 US-ASCII에서 사용이 금지된 문자들도 특정문자나
  데이터를 인코딩 할 수 있게 함으로써 이동성과 완성도를 높였다.
  
  2.42 인코딩 체계
  인코딩은 안전하지 않은 문자를 퍼센티지 기호(%)로 시작해 ASCII 코드로 표현되는 두 개의 16 진수 숫자로 이루어진
  이스케이프 문자로 바꾼다.
  P 42 쪽을 참고하자.
  
  2.43 문자제한
  몇몇 문자는 url 내에서 특별한 의미로 예약이 되어 있다.
  어떤 문자는 US-ASCII의 출력 가능한 문자 집합에 포함되어 있지 않다.
  그리고 어떤 문자는 몇몇 인터넷 게이트웨이와 프로토콜에서 혼동되는 것으로 알려져 있어 사용이 꺼려졌다.
  구체적인 제한 문자들은 P 42 쪽을 참고하자.
  
  2.44
  
  2.5 스킴의 바다
  
  HTTP ==  http://<호스트>:<포트>/<경로>?<질의>#<프레그먼트>
  기본포트 : 80
  
  HTTPS == http://<호스트>:<포트>/<경로>?<질의>#<프레그먼트>
  기본포트 : 443
  기본적인 구성은  http와 같지만 넷스케이프에서 개발한 보안 소켓 계층 SSL을 사용한다는 것이다.
  
  나머지 MAILTO / FTP / RTSP,RTSPU / FILE / NEWS / TELNET 는 P 45쪽을 참고하자.
  
  2.6 ~ 2.7
  P 46 ~ 47 기타 참조 내용들
  
  
  
  
  
